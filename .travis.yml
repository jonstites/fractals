# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # Update this to match the name of your project.
    - CRATE_NAME=fractious

matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true
  
  # These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-musl
      rust:
        - stable
        - beta
        - nightly

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu

  
before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

before_script:
  - rustup component add clippy

script:
  - cargo clippy -- -D warnings
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "WF+jDIdR8BTc72alLMK84756hP+IYOyd8f51l7zw07sM3DW5JwO7Va8tEQX4Wv0T8LKQVCmi2l3YDuRX7quphJ2PI1APK+MD5YGq6MkgYMSCdQqZjV5BUawBiiZibjrcBYaR/7r3jIiPpE9ZXmAkZWxNGFqDU09euFryIok+aedwyI4GRy8ouXp+mBLei/ErkyDkGIW/+1TOHYWIPyt9N9WkAy0NDBYx/YzLAC66vVfFFR/sD1EIAUpYPb+gwQjseY1n/vV0KyGCuCy+O346IIeCDqBnJz6KCyHVZkD2g6eWDqnFxSN7XT6+Jf0YAKElZra3W4QkYk8pkuk9hY3LabMkl2biTUBlRL8LU1gH0HaPqKFycYMbOZYe0KBfCIT8dykGTbNZrNp3awcY5xZWszfBuIXgJuqALGQlSR7WM3V5ln2s+bDfCI83Ed0RnUtQ9IwfmnenSlinFu6OXG0HypvZPTpyqrq84//9SLco7T3Fc6QFkWoiWkSZjxBlb0dyBpCJeF8+t0z6rX+ZZJf8ottlZsID4taWZegIAhitdJl1KH6DqDIKtJ/yMJy0c+olMxDzURNft9OWdzq1KfKbCqSAcqf5nV09crWlgdg/VIfkKZAXRQcC3ZoZTWTjpi54s9qd9dFiJKLvC1IV7+6yH1Kt4qZzWTWLjI6xm7QyWCc="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true
  on:
    branches:
      only:
        # release tags
        - /^v\d+\.\d+\.\d+.*$/
        - master
    
cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo


notifications:
  email:
    on_success: never
